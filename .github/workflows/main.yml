name: Sync IPTV Playlists

on:
  schedule:
    - cron: '0 */2 * * *' 
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download and Update IPTV Playlists
      run: |
        echo "🎵 开始下载 IPTV 播放列表..."
        
        # 下载所有播放列表文件
        wget https://raw.githubusercontent.com/pdd520/IPTV/master/output/rtp/iptv.m3u -O iptv.m3u || echo "❌ iptv.m3u 下载失败"
        
        # 检查下载结果
        echo "📊 文件下载状态："
        for file in iptv.m3u; do
          if [ -f "$file" ] && [ -s "$file" ]; then
            size=$(wc -c < "$file")
            echo "✅ $file: ${size} 字节"
          else
            echo "❌ $file: 下载失败或为空"
          fi
        done
        
        # 配置 Git
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        
        # 检查是否有变更，包括未跟踪文件和新文件
        echo "🔍 检查文件变更..."
        git status
        # 检查未跟踪文件
        if [ -n "$(git status --porcelain | grep '^??')" ]; then
          echo "ℹ️ 检测到未跟踪文件，准备添加..."
          git add *.m3u
        fi
        # 检查是否有变更（包括已跟踪和未跟踪文件）
        if git diff --staged --quiet *.m3u 2>/dev/null && git diff --quiet *.m3u 2>/dev/null; then
          echo "ℹ️ 没有检测到文件变更，跳过提交"
          exit 0
        fi
        
        # 添加并提交文件
        echo "📝 检测到变更，准备提交..."
        git add *.m3u
        git commit -m "chore: auto-update IPTV playlists - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo "✅ 文件已提交"
        
    - name: Push changes
      run: |
        echo "🚀 开始推送更新..."
        git push origin ${{ github.ref_name }} || echo "❌ 推送失败，请检查错误信息"
        echo "✅ 更新已推送到仓库"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
